#### Decode Image

- **URL:** `/decode`
- **Method:** `POST`
- **Description:** Decodes a secret message from an image.

##### Request

- **Headers:**
  - `Content-Type: multipart/form-data`
- **Parameters:**
  - `file`: (required) The image file from which to decode the message. Must be provided as a form-data file upload.

##### Example Request

Using `curl`:

To get output to the terminal
```sh
curl -X POST http://localhost:5000/decode -F "file=@encoded_image.png"
```

To save output in a text file
```sh
curl -X POST http://localhost:5000/decode -F "file=@encoded_image.png" -o decoded_message.txt
```

Using Postman:

1. Select `POST` method.
2. Enter `http://127.0.0.1:5000/decode` in the URL field.
3. In the `Body` tab, select `form-data`.
4. Add a key `file`, set type to `File`, and choose the encoded image file.
5. Click `Send`.

##### Response

- **Success (200 OK):**
  - **Description:** The decoded message.
  - **Content-Type:** `application/json`
  - **Body:**
    ```json
    {
      "message": "Your decoded secret message"
    }
    ```

- **Error (400 Bad Request):**
  - **Description:** Returned when the request is missing the required file parameter or contains an invalid file.
  - **Content-Type:** `application/json`
  - **Body:**
    ```json
    {
      "error": "Error message describing the issue"
    }
    ```

- **Error (500 Internal Server Error):**
  - **Description:** Returned when there is an internal server error during the decoding process.
  - **Content-Type:** `application/json`
  - **Body:**
    ```json
    {
      "error": "Error message describing the issue"
    }
    ```

##### Example Response

- **Success:**
  ```json
  {
    "message": "Your decoded secret message"
  }
  ```

- **Error:**
  ```json
  {
    "error": "No file part"
  }
  ```

  ```json
  {
    "error": "No selected file"
  }
  ```

  ```json
  {
    "error": "Detailed error message for internal server error"
  }
  ```
